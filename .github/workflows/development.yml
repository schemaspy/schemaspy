name: Development

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - '*.md'
      - 'docs/**'

jobs:
  build:
    if: ${{ github.repository_owner == 'schemaspy' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: nelonoel/branch-name@1ea5c86cb559a8c4e623da7f188496208232e49f
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Graphviz
        run: sudo apt-get install graphviz
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build, Test, Sonar
        run: >
          ./mvnw
          --batch-mode
          --update-snapshots
          --errors
          --show-version
          -P sonar
          -Dsonar.host.url=https://sonarcloud.io
          verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload test output
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: testout
          path: |
            target/testout/
            !target/testout/**/bower/
            !target/testout/**/fonts/
            !target/testout/**/*.js
          retention-days: 7
      - name: Create latest.json
        if: success()
        run: |
          mkdir gh-pages
          cp .github/pages/* gh-pages/
          cp target/schemaspy-*.jar gh-pages/
          echo "{\"version\": \"$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)\", \"filename\": \"$(./mvnw help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar\"}" >> gh-pages/latest.json
      - name: Deploy to gh-pages
        if: success()
        uses: crazy-max/ghaction-github-pages@b8f8d291c97fe0edd9fb4ee73018163593418e8f
        with:
          target_branch: gh-pages
          build_dir: gh-pages
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image
        if: success()
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: "${{ github.repository }}:snapshot"
          build-args: |
            GIT_BRANCH=${{ env.BRANCH_NAME }}
            GIT_REVISION=${{ github.sha }}