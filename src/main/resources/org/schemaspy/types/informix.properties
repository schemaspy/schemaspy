#
# see http://schemaspy.org/dbtypes.html
# for configuration / customization details
#

# InformixSQL driver details provided by Tom Conlin
dbms=IBM Informix
description=Standard
connectionSpec=jdbc:informix-sqli://<hostOptionalPort>/<db>:INFORMIXSERVER=<server>
host=host where database resides with optional port
port=port database is listening on
server=database server
db=database name

driver=com.informix.jdbc.IfxDriver

multirowdata=true

selectCheckConstraintsSql=select t.tabname as table_name, c.constrname as constraint_name, k.checktext as text from sysconstraints c,syschecks k,systables t where c.constrid = k.constrid and c.tabid = t.tabid and c.constrtype = 'C' and k.type = 'T' order by k.seqno

selectRoutinesSql=select procname || '(' || ifx_param_types(procid) || ')' as routine_name, \
routine_type, \
ifx_ret_types(procid) as dtd_identifier, \
routine_body, \
routine_definition, \
seqno, \
sql_data_access, \
security_type, \
is_deterministic, \
routine_comment \
from ( select p.procid, p.procname,p.langid, \
CASE p.isproc WHEN "f" THEN "function" WHEN "t" THEN "procedure" end as routine_type, \
l.langname as routine_body, \
b.data as routine_definition, \
b.seqno, \
'N/A' as sql_data_access, \
CASE LOWER (p.mode) WHEN "d" THEN "dba" WHEN "o" THEN "Owner" WHEN "p" THEN "Protected" WHEN "r" THEN "Restricted" WHEN "t" THEN "trigger" end as security_type, \
p.variant as is_deterministic, \
"N / A" as routine_comment \
from sysprocedures p \
join sysroutinelangs l on p.langid = l.langid \
join sysprocbody b on p.procid = b.procid and b.datakey = 'T' \
order by p.procid, b.seqno) t

selectRoutineParametersSql=select procname || '(' || ifx_param_types(procid) || ')' as specific_name, \
parameter_name, \
dtd_identifier, \
parameter_mode \
from ( select p.procname, p.procid, c.paramname as parameter_name, \
CASE \
WHEN mod(c.paramtype, 256)= 0 THEN 'CHAR' \
WHEN mod(c.paramtype, 256)= 1 THEN 'SMALLINT' \
WHEN mod(c.paramtype, 256)= 2 THEN 'INTEGER' \
WHEN mod(c.paramtype, 256)= 3 THEN 'FLOAT' \
WHEN mod(c.paramtype, 256)= 4 THEN 'SMALLFLOAT' \
WHEN mod(c.paramtype, 256)= 5 THEN 'DECIMAL' \
WHEN mod(c.paramtype, 256)= 6 THEN 'SERIAL' \
WHEN mod(c.paramtype, 256)= 7 THEN 'DATE' \
WHEN mod(c.paramtype, 256)= 8 THEN 'MONEY' \
WHEN mod(c.paramtype, 256)= 9 THEN 'NULL' \
WHEN mod(c.paramtype, 256)= 10 THEN 'DATETIME' \
WHEN mod(c.paramtype, 256)= 11 THEN 'BYTE' \
WHEN mod(c.paramtype, 256)= 12 THEN 'TEXT' \
WHEN mod(c.paramtype, 256)= 13 THEN 'VARCHAR' \
WHEN mod(c.paramtype, 256)= 14 THEN 'INTERVAL' \
WHEN mod(c.paramtype, 256)= 15 THEN 'NCHAR' \
WHEN mod(c.paramtype, 256)= 16 THEN 'NVARCHAR' \
WHEN mod(c.paramtype, 256)= 17 THEN 'INT8' \
WHEN mod(c.paramtype, 256)= 18 THEN 'SERIAL8' \
WHEN mod(c.paramtype, 256)= 19 THEN 'SET' \
WHEN mod(c.paramtype, 256)= 20 THEN 'MULTISET' \
WHEN mod(c.paramtype, 256)= 21 THEN 'LIST' \
WHEN mod(c.paramtype, 256)= 22 THEN 'ROW (unnamed)' \
WHEN mod(c.paramtype, 256)= 23 THEN 'COLLECTION' \
WHEN mod(c.paramtype, 256)= 40 THEN 'LVARCHAR fixed-length opaque types' \
WHEN mod(c.paramtype, 256)= 41 THEN 'BLOB, BOOLEAN, CLOB variable-length opaque types' \
WHEN mod(c.paramtype, 256)= 43 THEN 'LVARCHAR (client-side only)' \
WHEN mod(c.paramtype, 256)= 45 THEN 'BOOLEAN' \
WHEN mod(c.paramtype, 256)= 52 THEN 'BIGINT' \
WHEN mod(c.paramtype, 256)= 53 THEN 'BIGSERIAL' \
WHEN mod(c.paramtype, 256)= 2061 THEN 'IDSSECURITYLABEL' \
WHEN mod(c.paramtype, 256)= 4118 THEN 'ROW (named)' \
ELSE TO_CHAR(c.paramtype) end as dtd_identifier, \
CASE \
c.paramattr WHEN 0 THEN "unknown" WHEN 1 THEN "input" WHEN 2 THEN "inout" WHEN 3 THEN "Multi return" WHEN 4 THEN "out" WHEN 5 THEN "return" end as parameter_mode \
from sysprocedures p \
join sysproccolumns c on p.procid = c.procid \
order by p.procid, c.paramid) s