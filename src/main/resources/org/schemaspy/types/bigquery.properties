#
# Google BigQuery database type configuration
# see https://schemaspy.readthedocs.io/en/latest/configuration/databaseType.html
# for configuration / customization details
#

# Database Management System
dbms=Google BigQuery
description=Standard Google BigQuery connection

# Connection specification
# Format: jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443;ProjectId=<project>;
# Additional parameters can be added such as:
# - OAuthType=0 for service account authentication
# - OAuthServiceAcctEmail=<email>
# - OAuthPvtKeyPath=<path-to-json-key>
connectionSpec=jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443;ProjectId=<project>;DefaultDataset=<db>

# Parameter descriptions
project=Google Cloud Project ID
db=BigQuery dataset name (schema)

# JDBC Driver class
# Using the official Google BigQuery JDBC driver
driver=com.google.cloud.bigquery.BiQueryDriver,com.simba.googlebigquery.jdbc.Driver

# BigQuery uses datasets as schemas
# Ignore INFORMATION_SCHEMA and other system datasets
schemaSpec=(?!^INFORMATION_SCHEMA$|^__TABLES__$).*

# Select tables from INFORMATION_SCHEMA
# BigQuery's INFORMATION_SCHEMA.TABLES contains both tables and views
selectTablesSql=SELECT \
  table_catalog AS table_catalog, \
  table_schema AS table_schema, \
  table_name AS table_name, \
  CAST(NULL AS STRING) AS table_comment, \
  CAST(NULL AS INT64) AS table_rows \
FROM `<project>.<db>.INFORMATION_SCHEMA.TABLES` \
WHERE table_schema = :schema \
  AND table_type = 'BASE TABLE'

# Select views from INFORMATION_SCHEMA
selectViewsSql=SELECT \
  table_catalog AS view_catalog, \
  table_schema AS view_schema, \
  table_name AS view_name, \
  view_definition AS view_definition, \
  CAST(NULL AS STRING) AS view_comment \
FROM `<project>.<db>.INFORMATION_SCHEMA.VIEWS` \
WHERE table_schema = :schema

# Select column information with extended details
selectColumnTypesSql=SELECT \
  table_name, \
  column_name, \
  data_type AS column_type, \
  data_type AS short_column_type \
FROM `<project>.<db>.INFORMATION_SCHEMA.COLUMNS` \
WHERE table_schema = :schema

# Select table options (for table comments and additional metadata)
selectTableCommentsSql=SELECT \
  table_name, \
  option_value AS table_comment \
FROM `<project>.<db>.INFORMATION_SCHEMA.TABLE_OPTIONS` \
WHERE table_schema = :schema \
  AND option_name = 'description'

# BigQuery routines (functions and procedures)
selectRoutinesSql=SELECT \
  routine_name, \
  routine_type, \
  data_type AS dtd_identifier, \
  external_language AS routine_body, \
  routine_definition, \
  CAST(NULL AS STRING) AS sql_data_access, \
  security_type, \
  is_deterministic, \
  CAST(NULL AS STRING) AS routine_comment \
FROM `<project>.<db>.INFORMATION_SCHEMA.ROUTINES` \
WHERE routine_schema = :schema

# Select routine parameters
selectRoutineParametersSql=SELECT \
  routine_name AS specific_name, \
  parameter_name, \
  data_type AS dtd_identifier, \
  parameter_mode \
FROM `<project>.<db>.INFORMATION_SCHEMA.PARAMETERS` \
WHERE specific_schema = :schema \
ORDER BY specific_name, ordinal_position

# BigQuery doesn't support traditional sequences
# selectSequencesSql is not applicable

# Get approximate row count from table metadata
# Note: This is an approximation and may not be exact
selectRowCountSql=SELECT \
  row_count \
FROM `<project>.<db>.__TABLES__` \
WHERE table_id = :table

# BigQuery doesn't support traditional check constraints in the same way
# selectCheckConstraintsSql is not applicable for BigQuery

# Notes for users:
# 1. Replace <project> and <db> with your actual GCP project ID and dataset name
# 2. Authentication options:
#    - Service Account: Add OAuthType=0;OAuthServiceAcctEmail=<email>;OAuthPvtKeyPath=<path-to-json>
#    - Application Default Credentials: Add OAuthType=3
#    - User Authentication: Add OAuthType=1
# 3. For the Simba driver, the connection string format is:
#    jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443;ProjectId=<project>;DefaultDataset=<db>;
# 4. For the official Google driver (recommended):
#    jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443;ProjectId=<project>;DefaultDataset=<db>;
